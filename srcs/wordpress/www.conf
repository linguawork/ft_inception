#PM (FastCGI Process Manager) is an alternative PHP FastCGI implementation with some additional features (mostly) useful for heavy-loaded sites. 
#PHP-FPM has two major portion of configuration and also uses php.ini to load PHP configuration-
#First portion is GLOBAL DIRECTIVES (php-fpm.conf)
#Second portion is POOL DIRECTIVES (www.conf)



#config for POOL DIRECTIVES file: pool.d in the directory /etc/php/7.3/fpm/pool.d

#english language source website: https://myjeeva.com/php-fpm-configuration-101.html#pool-directives
# Two russian language source sites: https://www.php.net/manual/ru/install.fpm.configuration.php , https://losst.ru/nastrojka-php-fpm


#this is the pool name
#имя пула в квадратных скобках в самой верхней части файла, например, losst, это имя можно использовать в конфигурации с помощью переменной $pool, а ещё оно будет отображаться в менеджере процессов
[www]


#user string
#Unix-пользователь FPM-процессов. Этот параметр является обязательным.
user = www-data

#group string
#Unix-группа FPM-процессов. Если не установлен, группа по умолчанию равняется имени пользователя.
group = www-data

#English site info:
#Define Listen mode, FPM supports Unix Socket and TCP Socket
#Purpose: It used to mode connecting mechanism of PHP request from frontend server (like nginx, etc)
#Default Value: TCP Socket
#пример listen = 127.0.0.1:9000 

#Russian site info:
#listen string
#Адрес, который будет принимать FastCGI-запросы. Синтаксис: 'ip.add.re.ss:port', 'port', '/path/to/unix/socket'. Эта опция обязательна для каждого пула.

#здесь слушаем wordpress (так как на одной машине) через 9000 порт
listen = wordpress:9000


#pm string
#Выбор того, как менеджер процессов будет контролировать создание дочерних процессов. Возможные значения: static, ondemand, dynamic. Этот параметр является обязательным.
#dynamic - динамически изменяющееся число дочерних процессов, задаётся на основании следующих директив: pm.max_children, pm.start_servers, pm.min_spare_servers, pm.max_spare_servers.
pm = dynamic


#pm.max_children int
#Число дочерних процессов, которые будут созданы, когда pm установлен в static, или же максимальное число процессов, которые будут созданы, когда pm установлен в dynamic. Этот параметр является обязательным.
#Этот параметр устанавливает ограничение на число одновременных запросов, которые будут обслуживаться. 
pm.max_children = 30


#pm.start_servers int
#Число дочерних процессов, создаваемых при запуске. Используется, только когда pm установлен в dynamic. Значение по умолчанию: min_spare_servers + (max_spare_servers - min_spare_servers) / 2.
pm.start_servers = 3


#pm.min_spare_servers int
#Желаемое минимальное число неактивных процессов сервера. Используется, только когда pm установлено в dynamic. Кроме того, это обязательный параметр в этом случае.
pm.min_spare_servers = 3


#pm.max_spare_servers int
#Желаемое максимальное число неактивных процессов сервера. Используется, только когда pm установлен в dynamic. Кроме того, это обязательный параметр в этом случае.
pm.max_spare_servers = 10

#pm.max_requests int
#Число запросов дочернего процесса, после которого процесс будет перезапущен. Это полезно для избежания утечек памяти при использовании сторонних библиотек. Для бесконечной обработки запросов укажите '0'. Эквивалент PHP_FCGI_MAX_REQUESTS. Значение по умолчанию: 0.
pm.max_requests = 1000


#pm.status_path string
#Ссылка, по которой можно посмотреть страницу состояния FPM. Если значение не установлено, то страница статуса отображаться не будет. Значение по умолчанию: none.
pm.status_path = /status


#clear_env bool
#Очищает окружение в worker-процессах FPM. Предотвращает попадание произвольных переменных окружения в worker-процессы FPM, очищая окружение у worker-процессах до того, как переменные окружения, указанные в этой конфигурации пула будут добавлены. По умолчанию: Yes.
clear_env = no